name: H-DAE

on:
  pull_request:
    branches:
      - 'track/hdae/**'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - name: Install dev tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Doctor (if present)
        run: |
          if [ -x scripts/dev/codex_session_doctor.sh ]; then scripts/dev/codex_session_doctor.sh --fix || true; fi

  hdae-run:
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - name: Install dev tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Verify H-DAE setup
        run: make hdae-verify
      - name: Scan
        run: python -m tools.hdae.cli scan > hdae-scan.jsonl || true
      - name: Propose (dry-run)
        run: python -m tools.hdae.cli propose --dry-run > hdae-diff.txt || true
      - name: Verify (ruff/mypy/pytest)
        run: python -m tools.hdae.cli verify
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hdae-artifacts
          path: |
            hdae-scan.jsonl
            hdae-diff.txt
            docs/agents/waivers/**/*.md
      - name: Summarize in PR
        id: summarize_pr
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const fs = require('fs');
            const prNumber = context.payload.pull_request?.number ?? context.issue.number;
            if (!prNumber) { core.setFailed('No PR number in context.'); return ''; }
            // Read scan JSONL
            let lines = [];
            try { lines = fs.readFileSync('hdae-scan.jsonl','utf8').trim().split('\n').filter(Boolean); } catch {}
            // Count only L1 TFs (BEX-001, SIL-002)
            const L1 = new Set(['BEX-001','SIL-002']);
            let l1Count = 0, total = 0;
            for (const ln of lines) {
              try {
                const o = JSON.parse(ln);
                total += 1;
                const id = o.tf_id || o.pack || '';
                if (L1.has(String(id))) l1Count += 1;
              } catch {}
            }
            // Waivers for THIS PR only
            let waivers = 0;
            const wfile = `docs/agents/waivers/PR-${prNumber}.md`;
            try {
              const wtxt = fs.readFileSync(wfile, 'utf8');
              const matches = wtxt.match(/BEX-001|SIL-002/g) || [];
              waivers = matches.length || 1; // at least 1 if file exists
            } catch {}
            const remaining = Math.max(l1Count - waivers, 0);
            const body = [
              '### H-DAE Summary',
              `- Findings (all): **${total}**`,
              `- L1 findings (gate): **${l1Count}**`,
              `- Waivers (this PR): **${waivers}**`,
              `- Remaining L1 (unwaived): **${remaining}**`,
              '',
              '> L1 invariants outrank all else; unresolved L1 issues without waivers fail CI.',
              '',
              '- Artifacts: scan JSONL and dry-run diffs are attached.',
            ].join('\n');
            await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: prNumber, body });
            core.setOutput('remaining_l1', String(remaining));
            return String(remaining);
      - name: Gate on unwaived L1
        run: |
          REMAIN="${{ steps.summarize_pr.outputs.remaining_l1 || '0' }}"
          echo "Remaining L1 unwaived: $REMAIN"
          if [ "${REMAIN:-0}" -gt 0 ]; then
            echo "Unwaived L1 findings remain: $REMAIN"; exit 1; fi
